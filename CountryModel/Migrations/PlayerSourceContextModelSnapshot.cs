// <auto-generated />
using CountryModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryModel.Migrations
{
    [DbContext(typeof(PlayerSourceContext))]
    partial class PlayerSourceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CountryModel.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClubLeague")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ClubId")
                        .HasName("PK_tmp_ms_x_AF82112AB7EE1730");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("CountryModel.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlayerNationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlayerPos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PlayerId")
                        .HasName("PK_tmp_ms_x_757BC9A0CB74E8F6");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("CountryModel.PlayerClub", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("ClubId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerClub");
                });

            modelBuilder.Entity("CountryModel.PlayerClub", b =>
                {
                    b.HasOne("CountryModel.Club", "Club")
                        .WithMany("PlayerClub")
                        .HasForeignKey("ClubId")
                        .IsRequired()
                        .HasConstraintName("FK_PlayerClub_Club");

                    b.HasOne("CountryModel.Player", "Player")
                        .WithMany("PlayerClub")
                        .HasForeignKey("PlayerId")
                        .IsRequired()
                        .HasConstraintName("FK_PlayerClub_Player");

                    b.Navigation("Club");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("CountryModel.Club", b =>
                {
                    b.Navigation("PlayerClub");
                });

            modelBuilder.Entity("CountryModel.Player", b =>
                {
                    b.Navigation("PlayerClub");
                });
#pragma warning restore 612, 618
        }
    }
}
